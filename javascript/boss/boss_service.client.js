/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "boss/boss_service.proto" (package "boss", syntax proto3)
// tslint:disable
// @ts-nocheck
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BOSSClient = void 0;
const boss_service_1 = require("./boss_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
/**
 * @generated from protobuf service boss.BOSS
 */
class BOSSClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = boss_service_1.BOSS.typeName;
        this.methods = boss_service_1.BOSS.methods;
        this.options = boss_service_1.BOSS.options;
    }
    /**
     * @generated from protobuf rpc: ListKnownBOSSApps(google.protobuf.Empty) returns (boss.ListKnownBOSSAppsResponse);
     */
    listKnownBOSSApps(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListTasks(google.protobuf.Empty) returns (boss.ListTasksResponse);
     */
    listTasks(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterTask(boss.RegisterTaskRequest) returns (boss.RegisterTaskResponse);
     */
    registerTask(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateTask(boss.UpdateTaskRequest) returns (google.protobuf.Empty);
     */
    updateTask(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteTask(boss.DeleteTaskRequest) returns (google.protobuf.Empty);
     */
    deleteTask(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListFiles(boss.ListFilesRequest) returns (boss.ListFilesResponse);
     */
    listFiles(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UploadFile(boss.UploadFileRequest) returns (boss.UploadFileResponse);
     */
    uploadFile(input, options) {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateFileMetadata(boss.UpdateFileMetadataRequest) returns (google.protobuf.Empty);
     */
    updateFileMetadata(input, options) {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteFile(boss.DeleteFileRequest) returns (google.protobuf.Empty);
     */
    deleteFile(input, options) {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
}
exports.BOSSClient = BOSSClient;
