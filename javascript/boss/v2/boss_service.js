"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: boss/v2/boss_service.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.BossServiceDefinition = exports.protobufPackage = void 0;
const delete_file_1 = require("./delete_file");
const delete_task_1 = require("./delete_task");
const list_files_ctr_1 = require("./list_files_ctr");
const list_files_wup_1 = require("./list_files_wup");
const list_known_boss_apps_1 = require("./list_known_boss_apps");
const list_tasks_1 = require("./list_tasks");
const register_task_1 = require("./register_task");
const update_file_metadata_ctr_1 = require("./update_file_metadata_ctr");
const update_file_metadata_wup_1 = require("./update_file_metadata_wup");
const update_task_1 = require("./update_task");
const upload_file_ctr_1 = require("./upload_file_ctr");
const upload_file_wup_1 = require("./upload_file_wup");
exports.protobufPackage = "boss.v2";
exports.BossServiceDefinition = {
    name: "BossService",
    fullName: "boss.v2.BossService",
    methods: {
        listKnownBOSSApps: {
            name: "ListKnownBOSSApps",
            requestType: list_known_boss_apps_1.ListKnownBOSSAppsRequest,
            requestStream: false,
            responseType: list_known_boss_apps_1.ListKnownBOSSAppsResponse,
            responseStream: false,
            options: {},
        },
        listTasks: {
            name: "ListTasks",
            requestType: list_tasks_1.ListTasksRequest,
            requestStream: false,
            responseType: list_tasks_1.ListTasksResponse,
            responseStream: false,
            options: {},
        },
        registerTask: {
            name: "RegisterTask",
            requestType: register_task_1.RegisterTaskRequest,
            requestStream: false,
            responseType: register_task_1.RegisterTaskResponse,
            responseStream: false,
            options: {},
        },
        updateTask: {
            name: "UpdateTask",
            requestType: update_task_1.UpdateTaskRequest,
            requestStream: false,
            responseType: update_task_1.UpdateTaskResponse,
            responseStream: false,
            options: {},
        },
        deleteTask: {
            name: "DeleteTask",
            requestType: delete_task_1.DeleteTaskRequest,
            requestStream: false,
            responseType: delete_task_1.DeleteTaskResponse,
            responseStream: false,
            options: {},
        },
        deleteFile: {
            name: "DeleteFile",
            requestType: delete_file_1.DeleteFileRequest,
            requestStream: false,
            responseType: delete_file_1.DeleteFileResponse,
            responseStream: false,
            options: {},
        },
        listFilesWUP: {
            name: "ListFilesWUP",
            requestType: list_files_wup_1.ListFilesWUPRequest,
            requestStream: false,
            responseType: list_files_wup_1.ListFilesWUPResponse,
            responseStream: false,
            options: {},
        },
        uploadFileWUP: {
            name: "UploadFileWUP",
            requestType: upload_file_wup_1.UploadFileWUPRequest,
            requestStream: false,
            responseType: upload_file_wup_1.UploadFileWUPResponse,
            responseStream: false,
            options: {},
        },
        updateFileMetadataWUP: {
            name: "UpdateFileMetadataWUP",
            requestType: update_file_metadata_wup_1.UpdateFileMetadataWUPRequest,
            requestStream: false,
            responseType: update_file_metadata_wup_1.UpdateFileMetadataWUPResponse,
            responseStream: false,
            options: {},
        },
        listFilesCTR: {
            name: "ListFilesCTR",
            requestType: list_files_ctr_1.ListFilesCTRRequest,
            requestStream: false,
            responseType: list_files_ctr_1.ListFilesCTRResponse,
            responseStream: false,
            options: {},
        },
        uploadFileCTR: {
            name: "UploadFileCTR",
            requestType: upload_file_ctr_1.UploadFileCTRRequest,
            requestStream: false,
            responseType: upload_file_ctr_1.UploadFileCTRResponse,
            responseStream: false,
            options: {},
        },
        updateFileMetadataCTR: {
            name: "UpdateFileMetadataCTR",
            requestType: update_file_metadata_ctr_1.UpdateFileMetadataCTRRequest,
            requestStream: false,
            responseType: update_file_metadata_ctr_1.UpdateFileMetadataCTRResponse,
            responseStream: false,
            options: {},
        },
    },
};
