"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: boss/v2/ctr_boss_flags.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.CTRBOSSFlags = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
exports.protobufPackage = "boss.v2";
function createBaseCTRBOSSFlags() {
    return { markArrivedPrivileged: false };
}
exports.CTRBOSSFlags = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.markArrivedPrivileged !== false) {
            writer.uint32(8).bool(message.markArrivedPrivileged);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCTRBOSSFlags();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.markArrivedPrivileged = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            markArrivedPrivileged: isSet(object.markArrivedPrivileged)
                ? globalThis.Boolean(object.markArrivedPrivileged)
                : false,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.markArrivedPrivileged !== false) {
            obj.markArrivedPrivileged = message.markArrivedPrivileged;
        }
        return obj;
    },
    create(base) {
        return exports.CTRBOSSFlags.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseCTRBOSSFlags();
        message.markArrivedPrivileged = object.markArrivedPrivileged ?? false;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
