"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: boss/v2/platform_type.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformType = exports.protobufPackage = void 0;
exports.platformTypeFromJSON = platformTypeFromJSON;
exports.platformTypeToJSON = platformTypeToJSON;
/* eslint-disable */
exports.protobufPackage = "boss.v2";
var PlatformType;
(function (PlatformType) {
    PlatformType[PlatformType["PLATFORM_TYPE_UNSPECIFIED"] = 0] = "PLATFORM_TYPE_UNSPECIFIED";
    PlatformType[PlatformType["PLATFORM_TYPE_CTR"] = 1] = "PLATFORM_TYPE_CTR";
    PlatformType[PlatformType["PLATFORM_TYPE_WUP"] = 2] = "PLATFORM_TYPE_WUP";
    PlatformType[PlatformType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PlatformType || (exports.PlatformType = PlatformType = {}));
function platformTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "PLATFORM_TYPE_UNSPECIFIED":
            return PlatformType.PLATFORM_TYPE_UNSPECIFIED;
        case 1:
        case "PLATFORM_TYPE_CTR":
            return PlatformType.PLATFORM_TYPE_CTR;
        case 2:
        case "PLATFORM_TYPE_WUP":
            return PlatformType.PLATFORM_TYPE_WUP;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PlatformType.UNRECOGNIZED;
    }
}
function platformTypeToJSON(object) {
    switch (object) {
        case PlatformType.PLATFORM_TYPE_UNSPECIFIED:
            return "PLATFORM_TYPE_UNSPECIFIED";
        case PlatformType.PLATFORM_TYPE_CTR:
            return "PLATFORM_TYPE_CTR";
        case PlatformType.PLATFORM_TYPE_WUP:
            return "PLATFORM_TYPE_WUP";
        case PlatformType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
