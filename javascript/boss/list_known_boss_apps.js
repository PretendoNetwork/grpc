/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "boss/list_known_boss_apps.proto" (package "boss", syntax proto3)
// tslint:disable
// @ts-nocheck
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListKnownBOSSAppsResponse = exports.BOSSApp = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class BOSSApp$Type extends runtime_4.MessageType {
    constructor() {
        super("boss.BOSSApp", [
            { no: 1, name: "boss_app_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title_region", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "tasks", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.bossAppId = "";
        message.titleId = "";
        message.titleRegion = "";
        message.name = "";
        message.tasks = [];
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string boss_app_id */ 1:
                    message.bossAppId = reader.string();
                    break;
                case /* string title_id */ 2:
                    message.titleId = reader.string();
                    break;
                case /* string title_region */ 3:
                    message.titleRegion = reader.string();
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* repeated string tasks */ 5:
                    message.tasks.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string boss_app_id = 1; */
        if (message.bossAppId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.bossAppId);
        /* string title_id = 2; */
        if (message.titleId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.titleId);
        /* string title_region = 3; */
        if (message.titleRegion !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.titleRegion);
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated string tasks = 5; */
        for (let i = 0; i < message.tasks.length; i++)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.tasks[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message boss.BOSSApp
 */
exports.BOSSApp = new BOSSApp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListKnownBOSSAppsResponse$Type extends runtime_4.MessageType {
    constructor() {
        super("boss.ListKnownBOSSAppsResponse", [
            { no: 1, name: "apps", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.BOSSApp }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.apps = [];
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated boss.BOSSApp apps */ 1:
                    message.apps.push(exports.BOSSApp.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated boss.BOSSApp apps = 1; */
        for (let i = 0; i < message.apps.length; i++)
            exports.BOSSApp.internalBinaryWrite(message.apps[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message boss.ListKnownBOSSAppsResponse
 */
exports.ListKnownBOSSAppsResponse = new ListKnownBOSSAppsResponse$Type();
