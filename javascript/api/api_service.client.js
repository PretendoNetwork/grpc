/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "api/api_service.proto" (package "api", syntax proto3)
// tslint:disable
// @ts-nocheck
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.APIClient = void 0;
const api_service_1 = require("./api_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
/**
 * @generated from protobuf service api.API
 */
class APIClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = api_service_1.API.typeName;
        this.methods = api_service_1.API.methods;
        this.options = api_service_1.API.options;
    }
    /**
     * @generated from protobuf rpc: Register(api.RegisterRequest) returns (api.LoginResponse);
     */
    register(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Login(api.LoginRequest) returns (api.LoginResponse);
     */
    login(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserData(google.protobuf.Empty) returns (api.GetUserDataResponse);
     */
    getUserData(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateUserData(api.UpdateUserDataRequest) returns (api.GetUserDataResponse);
     */
    updateUserData(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ForgotPassword(api.ForgotPasswordRequest) returns (google.protobuf.Empty);
     */
    forgotPassword(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ResetPassword(api.ResetPasswordRequest) returns (google.protobuf.Empty);
     */
    resetPassword(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetDiscordConnectionData(api.SetDiscordConnectionDataRequest) returns (google.protobuf.Empty);
     */
    setDiscordConnectionData(input, options) {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetStripeConnectionData(api.SetStripeConnectionDataRequest) returns (google.protobuf.Empty);
     */
    setStripeConnectionData(input, options) {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
}
exports.APIClient = APIClient;
