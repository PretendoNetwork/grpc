"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: api/v2/api_service.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiServiceDefinition = exports.protobufPackage = void 0;
const delete_account_rpc_1 = require("./delete_account_rpc");
const forgot_password_rpc_1 = require("./forgot_password_rpc");
const get_user_data_rpc_1 = require("./get_user_data_rpc");
const login_rpc_1 = require("./login_rpc");
const register_rpc_1 = require("./register_rpc");
const reset_password_rpc_1 = require("./reset_password_rpc");
const set_discord_connection_data_rpc_1 = require("./set_discord_connection_data_rpc");
const set_stripe_connection_data_rpc_1 = require("./set_stripe_connection_data_rpc");
const update_user_data_rpc_1 = require("./update_user_data_rpc");
exports.protobufPackage = "api.v2";
exports.ApiServiceDefinition = {
    name: "ApiService",
    fullName: "api.v2.ApiService",
    methods: {
        register: {
            name: "Register",
            requestType: register_rpc_1.RegisterRequest,
            requestStream: false,
            responseType: register_rpc_1.RegisterResponse,
            responseStream: false,
            options: {},
        },
        login: {
            name: "Login",
            requestType: login_rpc_1.LoginRequest,
            requestStream: false,
            responseType: login_rpc_1.LoginResponse,
            responseStream: false,
            options: {},
        },
        getUserData: {
            name: "GetUserData",
            requestType: get_user_data_rpc_1.GetUserDataRequest,
            requestStream: false,
            responseType: get_user_data_rpc_1.GetUserDataResponse,
            responseStream: false,
            options: {},
        },
        updateUserData: {
            name: "UpdateUserData",
            requestType: update_user_data_rpc_1.UpdateUserDataRequest,
            requestStream: false,
            responseType: update_user_data_rpc_1.UpdateUserDataResponse,
            responseStream: false,
            options: {},
        },
        forgotPassword: {
            name: "ForgotPassword",
            requestType: forgot_password_rpc_1.ForgotPasswordRequest,
            requestStream: false,
            responseType: forgot_password_rpc_1.ForgotPasswordResponse,
            responseStream: false,
            options: {},
        },
        resetPassword: {
            name: "ResetPassword",
            requestType: reset_password_rpc_1.ResetPasswordRequest,
            requestStream: false,
            responseType: reset_password_rpc_1.ResetPasswordResponse,
            responseStream: false,
            options: {},
        },
        setDiscordConnectionData: {
            name: "SetDiscordConnectionData",
            requestType: set_discord_connection_data_rpc_1.SetDiscordConnectionDataRequest,
            requestStream: false,
            responseType: set_discord_connection_data_rpc_1.SetDiscordConnectionDataResponse,
            responseStream: false,
            options: {},
        },
        setStripeConnectionData: {
            name: "SetStripeConnectionData",
            requestType: set_stripe_connection_data_rpc_1.SetStripeConnectionDataRequest,
            requestStream: false,
            responseType: set_stripe_connection_data_rpc_1.SetStripeConnectionDataResponse,
            responseStream: false,
            options: {},
        },
        deleteAccount: {
            name: "DeleteAccount",
            requestType: delete_account_rpc_1.DeleteAccountRequest,
            requestStream: false,
            responseType: delete_account_rpc_1.DeleteAccountResponse,
            responseStream: false,
            options: {},
        },
    },
};
