/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "api/v2/register_rpc.proto" (package "api.v2", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message api.v2.RegisterRequest
 */
export interface RegisterRequest {
    /**
     * @generated from protobuf field: string email = 1;
     */
    email: string;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string mii_name = 3;
     */
    miiName: string;
    /**
     * @generated from protobuf field: string password = 4;
     */
    password: string;
    /**
     * @generated from protobuf field: string password_confirm = 5;
     */
    passwordConfirm: string;
    /**
     * @generated from protobuf field: optional string captcha_response = 6;
     */
    captchaResponse?: string;
}
/**
 * @generated from protobuf message api.v2.RegisterResponse
 */
export interface RegisterResponse {
    /**
     * @generated from protobuf field: uint32 expires_in = 1;
     */
    expiresIn: number;
    /**
     * @generated from protobuf field: string token_type = 2;
     */
    tokenType: string;
    /**
     * @generated from protobuf field: string access_token = 3;
     */
    accessToken: string;
    /**
     * @generated from protobuf field: string refresh_token = 4;
     */
    refreshToken: string;
}
declare class RegisterRequest$Type extends MessageType<RegisterRequest> {
    constructor();
    create(value?: PartialMessage<RegisterRequest>): RegisterRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterRequest): RegisterRequest;
    internalBinaryWrite(message: RegisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message api.v2.RegisterRequest
 */
export declare const RegisterRequest: RegisterRequest$Type;
declare class RegisterResponse$Type extends MessageType<RegisterResponse> {
    constructor();
    create(value?: PartialMessage<RegisterResponse>): RegisterResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterResponse): RegisterResponse;
    internalBinaryWrite(message: RegisterResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message api.v2.RegisterResponse
 */
export declare const RegisterResponse: RegisterResponse$Type;
export {};
