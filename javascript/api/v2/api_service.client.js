/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "api/v2/api_service.proto" (package "api.v2", syntax proto3)
// tslint:disable
// @ts-nocheck
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiServiceClient = void 0;
const api_service_1 = require("./api_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
/**
 * @generated from protobuf service api.v2.ApiService
 */
class ApiServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = api_service_1.ApiService.typeName;
        this.methods = api_service_1.ApiService.methods;
        this.options = api_service_1.ApiService.options;
    }
    /**
     * @generated from protobuf rpc: Register(api.v2.RegisterRequest) returns (api.v2.RegisterResponse);
     */
    register(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Login(api.v2.LoginRequest) returns (api.v2.LoginResponse);
     */
    login(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserData(api.v2.GetUserDataRequest) returns (api.v2.GetUserDataResponse);
     */
    getUserData(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateUserData(api.v2.UpdateUserDataRequest) returns (api.v2.UpdateUserDataResponse);
     */
    updateUserData(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ForgotPassword(api.v2.ForgotPasswordRequest) returns (api.v2.ForgotPasswordResponse);
     */
    forgotPassword(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ResetPassword(api.v2.ResetPasswordRequest) returns (api.v2.ResetPasswordResponse);
     */
    resetPassword(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetDiscordConnectionData(api.v2.SetDiscordConnectionDataRequest) returns (api.v2.SetDiscordConnectionDataResponse);
     */
    setDiscordConnectionData(input, options) {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetStripeConnectionData(api.v2.SetStripeConnectionDataRequest) returns (api.v2.SetStripeConnectionDataResponse);
     */
    setStripeConnectionData(input, options) {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return runtime_rpc_1.stackIntercept("unary", this._transport, method, opt, input);
    }
}
exports.ApiServiceClient = ApiServiceClient;
