// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: miiverse/v2/delete_account_data_rpc.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "miiverse.v2";

export interface DeleteAccountDataRequest {
  pid: number;
}

export interface DeleteAccountDataResponse {
  hasDeleted: boolean;
  postsDeleted: number;
}

function createBaseDeleteAccountDataRequest(): DeleteAccountDataRequest {
  return { pid: 0 };
}

export const DeleteAccountDataRequest: MessageFns<DeleteAccountDataRequest> = {
  encode(message: DeleteAccountDataRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.pid !== 0) {
      writer.uint32(8).uint32(message.pid);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteAccountDataRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteAccountDataRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.pid = reader.uint32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteAccountDataRequest {
    return { pid: isSet(object.pid) ? globalThis.Number(object.pid) : 0 };
  },

  toJSON(message: DeleteAccountDataRequest): unknown {
    const obj: any = {};
    if (message.pid !== 0) {
      obj.pid = Math.round(message.pid);
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteAccountDataRequest>): DeleteAccountDataRequest {
    return DeleteAccountDataRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteAccountDataRequest>): DeleteAccountDataRequest {
    const message = createBaseDeleteAccountDataRequest();
    message.pid = object.pid ?? 0;
    return message;
  },
};

function createBaseDeleteAccountDataResponse(): DeleteAccountDataResponse {
  return { hasDeleted: false, postsDeleted: 0 };
}

export const DeleteAccountDataResponse: MessageFns<DeleteAccountDataResponse> = {
  encode(message: DeleteAccountDataResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.hasDeleted !== false) {
      writer.uint32(8).bool(message.hasDeleted);
    }
    if (message.postsDeleted !== 0) {
      writer.uint32(16).uint32(message.postsDeleted);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteAccountDataResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteAccountDataResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.hasDeleted = reader.bool();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.postsDeleted = reader.uint32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteAccountDataResponse {
    return {
      hasDeleted: isSet(object.hasDeleted) ? globalThis.Boolean(object.hasDeleted) : false,
      postsDeleted: isSet(object.postsDeleted) ? globalThis.Number(object.postsDeleted) : 0,
    };
  },

  toJSON(message: DeleteAccountDataResponse): unknown {
    const obj: any = {};
    if (message.hasDeleted !== false) {
      obj.hasDeleted = message.hasDeleted;
    }
    if (message.postsDeleted !== 0) {
      obj.postsDeleted = Math.round(message.postsDeleted);
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteAccountDataResponse>): DeleteAccountDataResponse {
    return DeleteAccountDataResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteAccountDataResponse>): DeleteAccountDataResponse {
    const message = createBaseDeleteAccountDataResponse();
    message.hasDeleted = object.hasDeleted ?? false;
    message.postsDeleted = object.postsDeleted ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | bigint | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
