/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable,output_javascript,output_legacy_commonjs,ts_nocheck
// @generated from protobuf file "account/pnid_permission_flags.proto" (package "account", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message account.PNIDPermissionFlags
 */
export interface PNIDPermissionFlags {
    /**
     * @generated from protobuf field: bool banned_all_permanently = 1;
     */
    bannedAllPermanently: boolean;
    /**
     * @generated from protobuf field: bool banned_all_temporarily = 2;
     */
    bannedAllTemporarily: boolean;
    /**
     * @generated from protobuf field: bool beta_access = 3;
     */
    betaAccess: boolean;
    /**
     * @generated from protobuf field: bool access_admin_panel = 4;
     */
    accessAdminPanel: boolean;
    /**
     * @generated from protobuf field: bool create_server_configs = 5;
     */
    createServerConfigs: boolean;
    /**
     * @generated from protobuf field: bool modify_server_configs = 6;
     */
    modifyServerConfigs: boolean;
    /**
     * @generated from protobuf field: bool deploy_server = 7;
     */
    deployServer: boolean;
    /**
     * @generated from protobuf field: bool modify_pnids = 8;
     */
    modifyPnids: boolean;
    /**
     * @generated from protobuf field: bool modify_nex_accounts = 9;
     */
    modifyNexAccounts: boolean;
    /**
     * @generated from protobuf field: bool modify_consoles = 10;
     */
    modifyConsoles: boolean;
    /**
     * @generated from protobuf field: bool ban_pnids = 11;
     */
    banPnids: boolean;
    /**
     * @generated from protobuf field: bool ban_nex_accounts = 12;
     */
    banNexAccounts: boolean;
    /**
     * @generated from protobuf field: bool ban_consoles = 13;
     */
    banConsoles: boolean;
    /**
     * @generated from protobuf field: bool moderate_miiverse = 14;
     */
    moderateMiiverse: boolean;
    /**
     * @generated from protobuf field: bool create_api_keys = 15;
     */
    createApiKeys: boolean;
    /**
     * @generated from protobuf field: bool create_boss_tasks = 16;
     */
    createBossTasks: boolean;
    /**
     * @generated from protobuf field: bool update_boss_tasks = 17;
     */
    updateBossTasks: boolean;
    /**
     * @generated from protobuf field: bool delete_boss_tasks = 18;
     */
    deleteBossTasks: boolean;
    /**
     * @generated from protobuf field: bool upload_boss_files = 19;
     */
    uploadBossFiles: boolean;
    /**
     * @generated from protobuf field: bool update_boss_files = 20;
     */
    updateBossFiles: boolean;
    /**
     * @generated from protobuf field: bool delete_boss_files = 21;
     */
    deleteBossFiles: boolean;
    /**
     * @generated from protobuf field: bool update_pnid_permissions = 22;
     */
    updatePnidPermissions: boolean;
}
declare class PNIDPermissionFlags$Type extends MessageType<PNIDPermissionFlags> {
    constructor();
    create(value?: PartialMessage<PNIDPermissionFlags>): PNIDPermissionFlags;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PNIDPermissionFlags): PNIDPermissionFlags;
    internalBinaryWrite(message: PNIDPermissionFlags, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message account.PNIDPermissionFlags
 */
export declare const PNIDPermissionFlags: PNIDPermissionFlags$Type;
export {};
