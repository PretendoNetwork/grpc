// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: account/pnid_permission_flags.proto

package account

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PNIDPermissionFlags struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BannedAllPermanently  bool                   `protobuf:"varint,1,opt,name=banned_all_permanently,json=bannedAllPermanently,proto3" json:"banned_all_permanently,omitempty"`
	BannedAllTemporarily  bool                   `protobuf:"varint,2,opt,name=banned_all_temporarily,json=bannedAllTemporarily,proto3" json:"banned_all_temporarily,omitempty"`
	BetaAccess            bool                   `protobuf:"varint,3,opt,name=beta_access,json=betaAccess,proto3" json:"beta_access,omitempty"`
	AccessAdminPanel      bool                   `protobuf:"varint,4,opt,name=access_admin_panel,json=accessAdminPanel,proto3" json:"access_admin_panel,omitempty"`
	CreateServerConfigs   bool                   `protobuf:"varint,5,opt,name=create_server_configs,json=createServerConfigs,proto3" json:"create_server_configs,omitempty"`
	ModifyServerConfigs   bool                   `protobuf:"varint,6,opt,name=modify_server_configs,json=modifyServerConfigs,proto3" json:"modify_server_configs,omitempty"`
	DeployServer          bool                   `protobuf:"varint,7,opt,name=deploy_server,json=deployServer,proto3" json:"deploy_server,omitempty"`
	ModifyPnids           bool                   `protobuf:"varint,8,opt,name=modify_pnids,json=modifyPnids,proto3" json:"modify_pnids,omitempty"`
	ModifyNexAccounts     bool                   `protobuf:"varint,9,opt,name=modify_nex_accounts,json=modifyNexAccounts,proto3" json:"modify_nex_accounts,omitempty"`
	ModifyConsoles        bool                   `protobuf:"varint,10,opt,name=modify_consoles,json=modifyConsoles,proto3" json:"modify_consoles,omitempty"`
	BanPnids              bool                   `protobuf:"varint,11,opt,name=ban_pnids,json=banPnids,proto3" json:"ban_pnids,omitempty"`
	BanNexAccounts        bool                   `protobuf:"varint,12,opt,name=ban_nex_accounts,json=banNexAccounts,proto3" json:"ban_nex_accounts,omitempty"`
	BanConsoles           bool                   `protobuf:"varint,13,opt,name=ban_consoles,json=banConsoles,proto3" json:"ban_consoles,omitempty"`
	ModerateMiiverse      bool                   `protobuf:"varint,14,opt,name=moderate_miiverse,json=moderateMiiverse,proto3" json:"moderate_miiverse,omitempty"`
	CreateApiKeys         bool                   `protobuf:"varint,15,opt,name=create_api_keys,json=createApiKeys,proto3" json:"create_api_keys,omitempty"`
	CreateBossTasks       bool                   `protobuf:"varint,16,opt,name=create_boss_tasks,json=createBossTasks,proto3" json:"create_boss_tasks,omitempty"`
	UpdateBossTasks       bool                   `protobuf:"varint,17,opt,name=update_boss_tasks,json=updateBossTasks,proto3" json:"update_boss_tasks,omitempty"`
	DeleteBossTasks       bool                   `protobuf:"varint,18,opt,name=delete_boss_tasks,json=deleteBossTasks,proto3" json:"delete_boss_tasks,omitempty"`
	UploadBossFiles       bool                   `protobuf:"varint,19,opt,name=upload_boss_files,json=uploadBossFiles,proto3" json:"upload_boss_files,omitempty"`
	UpdateBossFiles       bool                   `protobuf:"varint,20,opt,name=update_boss_files,json=updateBossFiles,proto3" json:"update_boss_files,omitempty"`
	DeleteBossFiles       bool                   `protobuf:"varint,21,opt,name=delete_boss_files,json=deleteBossFiles,proto3" json:"delete_boss_files,omitempty"`
	UpdatePnidPermissions bool                   `protobuf:"varint,22,opt,name=update_pnid_permissions,json=updatePnidPermissions,proto3" json:"update_pnid_permissions,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PNIDPermissionFlags) Reset() {
	*x = PNIDPermissionFlags{}
	mi := &file_account_pnid_permission_flags_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PNIDPermissionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNIDPermissionFlags) ProtoMessage() {}

func (x *PNIDPermissionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_account_pnid_permission_flags_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNIDPermissionFlags.ProtoReflect.Descriptor instead.
func (*PNIDPermissionFlags) Descriptor() ([]byte, []int) {
	return file_account_pnid_permission_flags_proto_rawDescGZIP(), []int{0}
}

func (x *PNIDPermissionFlags) GetBannedAllPermanently() bool {
	if x != nil {
		return x.BannedAllPermanently
	}
	return false
}

func (x *PNIDPermissionFlags) GetBannedAllTemporarily() bool {
	if x != nil {
		return x.BannedAllTemporarily
	}
	return false
}

func (x *PNIDPermissionFlags) GetBetaAccess() bool {
	if x != nil {
		return x.BetaAccess
	}
	return false
}

func (x *PNIDPermissionFlags) GetAccessAdminPanel() bool {
	if x != nil {
		return x.AccessAdminPanel
	}
	return false
}

func (x *PNIDPermissionFlags) GetCreateServerConfigs() bool {
	if x != nil {
		return x.CreateServerConfigs
	}
	return false
}

func (x *PNIDPermissionFlags) GetModifyServerConfigs() bool {
	if x != nil {
		return x.ModifyServerConfigs
	}
	return false
}

func (x *PNIDPermissionFlags) GetDeployServer() bool {
	if x != nil {
		return x.DeployServer
	}
	return false
}

func (x *PNIDPermissionFlags) GetModifyPnids() bool {
	if x != nil {
		return x.ModifyPnids
	}
	return false
}

func (x *PNIDPermissionFlags) GetModifyNexAccounts() bool {
	if x != nil {
		return x.ModifyNexAccounts
	}
	return false
}

func (x *PNIDPermissionFlags) GetModifyConsoles() bool {
	if x != nil {
		return x.ModifyConsoles
	}
	return false
}

func (x *PNIDPermissionFlags) GetBanPnids() bool {
	if x != nil {
		return x.BanPnids
	}
	return false
}

func (x *PNIDPermissionFlags) GetBanNexAccounts() bool {
	if x != nil {
		return x.BanNexAccounts
	}
	return false
}

func (x *PNIDPermissionFlags) GetBanConsoles() bool {
	if x != nil {
		return x.BanConsoles
	}
	return false
}

func (x *PNIDPermissionFlags) GetModerateMiiverse() bool {
	if x != nil {
		return x.ModerateMiiverse
	}
	return false
}

func (x *PNIDPermissionFlags) GetCreateApiKeys() bool {
	if x != nil {
		return x.CreateApiKeys
	}
	return false
}

func (x *PNIDPermissionFlags) GetCreateBossTasks() bool {
	if x != nil {
		return x.CreateBossTasks
	}
	return false
}

func (x *PNIDPermissionFlags) GetUpdateBossTasks() bool {
	if x != nil {
		return x.UpdateBossTasks
	}
	return false
}

func (x *PNIDPermissionFlags) GetDeleteBossTasks() bool {
	if x != nil {
		return x.DeleteBossTasks
	}
	return false
}

func (x *PNIDPermissionFlags) GetUploadBossFiles() bool {
	if x != nil {
		return x.UploadBossFiles
	}
	return false
}

func (x *PNIDPermissionFlags) GetUpdateBossFiles() bool {
	if x != nil {
		return x.UpdateBossFiles
	}
	return false
}

func (x *PNIDPermissionFlags) GetDeleteBossFiles() bool {
	if x != nil {
		return x.DeleteBossFiles
	}
	return false
}

func (x *PNIDPermissionFlags) GetUpdatePnidPermissions() bool {
	if x != nil {
		return x.UpdatePnidPermissions
	}
	return false
}

var File_account_pnid_permission_flags_proto protoreflect.FileDescriptor

const file_account_pnid_permission_flags_proto_rawDesc = "" +
	"\n" +
	"#account/pnid_permission_flags.proto\x12\aaccount\"\xd8\a\n" +
	"\x13PNIDPermissionFlags\x124\n" +
	"\x16banned_all_permanently\x18\x01 \x01(\bR\x14bannedAllPermanently\x124\n" +
	"\x16banned_all_temporarily\x18\x02 \x01(\bR\x14bannedAllTemporarily\x12\x1f\n" +
	"\vbeta_access\x18\x03 \x01(\bR\n" +
	"betaAccess\x12,\n" +
	"\x12access_admin_panel\x18\x04 \x01(\bR\x10accessAdminPanel\x122\n" +
	"\x15create_server_configs\x18\x05 \x01(\bR\x13createServerConfigs\x122\n" +
	"\x15modify_server_configs\x18\x06 \x01(\bR\x13modifyServerConfigs\x12#\n" +
	"\rdeploy_server\x18\a \x01(\bR\fdeployServer\x12!\n" +
	"\fmodify_pnids\x18\b \x01(\bR\vmodifyPnids\x12.\n" +
	"\x13modify_nex_accounts\x18\t \x01(\bR\x11modifyNexAccounts\x12'\n" +
	"\x0fmodify_consoles\x18\n" +
	" \x01(\bR\x0emodifyConsoles\x12\x1b\n" +
	"\tban_pnids\x18\v \x01(\bR\bbanPnids\x12(\n" +
	"\x10ban_nex_accounts\x18\f \x01(\bR\x0ebanNexAccounts\x12!\n" +
	"\fban_consoles\x18\r \x01(\bR\vbanConsoles\x12+\n" +
	"\x11moderate_miiverse\x18\x0e \x01(\bR\x10moderateMiiverse\x12&\n" +
	"\x0fcreate_api_keys\x18\x0f \x01(\bR\rcreateApiKeys\x12*\n" +
	"\x11create_boss_tasks\x18\x10 \x01(\bR\x0fcreateBossTasks\x12*\n" +
	"\x11update_boss_tasks\x18\x11 \x01(\bR\x0fupdateBossTasks\x12*\n" +
	"\x11delete_boss_tasks\x18\x12 \x01(\bR\x0fdeleteBossTasks\x12*\n" +
	"\x11upload_boss_files\x18\x13 \x01(\bR\x0fuploadBossFiles\x12*\n" +
	"\x11update_boss_files\x18\x14 \x01(\bR\x0fupdateBossFiles\x12*\n" +
	"\x11delete_boss_files\x18\x15 \x01(\bR\x0fdeleteBossFiles\x126\n" +
	"\x17update_pnid_permissions\x18\x16 \x01(\bR\x15updatePnidPermissionsB\x8f\x01\n" +
	"\vcom.accountB\x18PnidPermissionFlagsProtoP\x01Z*github.com/PretendoNetwork/grpc/go/account\xa2\x02\x03AXX\xaa\x02\aAccount\xca\x02\aAccount\xe2\x02\x13Account\\GPBMetadata\xea\x02\aAccountb\x06proto3"

var (
	file_account_pnid_permission_flags_proto_rawDescOnce sync.Once
	file_account_pnid_permission_flags_proto_rawDescData []byte
)

func file_account_pnid_permission_flags_proto_rawDescGZIP() []byte {
	file_account_pnid_permission_flags_proto_rawDescOnce.Do(func() {
		file_account_pnid_permission_flags_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_account_pnid_permission_flags_proto_rawDesc), len(file_account_pnid_permission_flags_proto_rawDesc)))
	})
	return file_account_pnid_permission_flags_proto_rawDescData
}

var file_account_pnid_permission_flags_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_account_pnid_permission_flags_proto_goTypes = []any{
	(*PNIDPermissionFlags)(nil), // 0: account.PNIDPermissionFlags
}
var file_account_pnid_permission_flags_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_account_pnid_permission_flags_proto_init() }
func file_account_pnid_permission_flags_proto_init() {
	if File_account_pnid_permission_flags_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_account_pnid_permission_flags_proto_rawDesc), len(file_account_pnid_permission_flags_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_pnid_permission_flags_proto_goTypes,
		DependencyIndexes: file_account_pnid_permission_flags_proto_depIdxs,
		MessageInfos:      file_account_pnid_permission_flags_proto_msgTypes,
	}.Build()
	File_account_pnid_permission_flags_proto = out.File
	file_account_pnid_permission_flags_proto_goTypes = nil
	file_account_pnid_permission_flags_proto_depIdxs = nil
}
